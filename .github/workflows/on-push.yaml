name: Deploy on push
on: push

concurrency:
  group: rn2021-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    if: github.ref_type == 'branch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Variable setup
        uses: ./.github/actions/variables-setup

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Build
        run: |
          yarn nx run-many --target=build --all --parallel=true

      - name: Build Storybook
        run: |
          yarn nx run-many --target=build-storybook --all --parallel=true

      - name: Build and push docker images
        run: |
          yarn nx run-many --target=docker --all --parallel=true

      - name: Build kubernetes assets
        run: |
          yarn nx run-many --target=k8s --all --parallel=true

      - name: Archive kubernetes artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-k8s
          path: dist/.k8s

  deploy:
    if: github.ref_type == 'branch'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Variable setup
        uses: ./.github/actions/variables-setup

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Setup kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Download kubernetes artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-k8s
          path: dist/.k8s

      - name: Create namepsace
        run: kubectl create namespace $BRANCH --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to Kubernetes cluster
        run: kubectl apply -f dist/.k8s/

      - name: Show ingresses endpoints
        run: kubectl get ingress --namespace $BRANCH -o jsonpath='{range .items[*].spec.rules[*]}{"https://"}{.host}{"\n"}{end}'

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Test
        run: |
          yarn nx run-many --target=lint --all --parallel=true
          yarn nx run-many --target=test --all --parallel=true
